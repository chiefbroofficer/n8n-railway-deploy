# Local Testing Configuration - Mirrors Railway Setup
version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: n8n-postgres
    environment:
      POSTGRES_USER: n8n
      POSTGRES_PASSWORD: n8n_password
      POSTGRES_DB: n8n
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - n8n-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U n8n"]
      interval: 10s
      timeout: 5s
      retries: 5

  n8n:
    build: .
    container_name: n8n-app
    environment:
      # Core Configuration
      N8N_HOST: 0.0.0.0
      N8N_PORT: 5678
      N8N_PROTOCOL: http
      NODE_ENV: development
      
      # Database
      DB_TYPE: postgresdb
      DB_POSTGRESDB_HOST: postgres
      DB_POSTGRESDB_PORT: 5432
      DB_POSTGRESDB_DATABASE: n8n
      DB_POSTGRESDB_USER: n8n
      DB_POSTGRESDB_PASSWORD: n8n_password
      
      # Authentication
      N8N_BASIC_AUTH_ACTIVE: "true"
      N8N_BASIC_AUTH_USER: admin
      N8N_BASIC_AUTH_PASSWORD: admin123
      
      # Encryption Key (32 characters)
      N8N_ENCRYPTION_KEY: your-32-character-encryption-key
      
      # Webhook URL
      WEBHOOK_URL: http://localhost:5678
      
      # API Configuration
      N8N_API_DISABLED: "false"
      N8N_PUBLIC_API_DISABLED: "false"
      
      # Timezone
      GENERIC_TIMEZONE: America/New_York
      TZ: America/New_York
    ports:
      - "5678:5678"
    volumes:
      - n8n_data:/home/node/.n8n
    networks:
      - n8n-network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data:
  n8n_data:

networks:
  n8n-network:
    driver: bridge